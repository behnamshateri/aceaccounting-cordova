{"version":3,"sources":["Components/Authentication/SignUp.js"],"names":["Signup","props","_this","Object","D_Projects_ace_accounting_cordova_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_Projects_ace_accounting_cordova_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Projects_ace_accounting_cordova_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","vm","dotnetify","react","connect","D_Projects_ace_accounting_cordova_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","vmArg","CountryISO2","state","valid","validation","countryName","flag","countryCode","country_code_ios2","phoneValidate","fields","firstname","lastname","email","password","phonenumber","errors","SubmitErrors","SubmitSuccuss","WhatsMyInfo","CountryCodeISO2","CountryName","CountryCodePhone","ExternalIPAddress","myRef","React","createRef","event","target","name","value","setState","callback","formIsValid","validator","isEmpty","isLength","min","max","undefined","isEmail","isNumeric","_this2","preventDefault","handleValidation","_this2$state","$dispatch","Submit","phone","userCountryISO2","prevState","localStorage","setItem","history","push","status","current","selectedCountryData","dialCode","iso2","$destroy","_this$state$fields","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","onSubmit","handlesubmit","bind","react_bootstrap__WEBPACK_IMPORTED_MODULE_11__","type","placeholder","onChange","handleChange","react_password_strength__WEBPACK_IMPORTED_MODULE_10___default","style","marginBottom","borderRadius","minLength","scoreWords","changeCallback","_handleChangepasswordCallBack","inputProps","autoComplete","react_intl_tel_input__WEBPACK_IMPORTED_MODULE_7___default","ref","onPhoneNumberBlur","isValid","preferredCountries","toLowerCase","onPhoneNumberChange","handlePhone","onSelectFlag","selectcountry","separateDialCode","fieldName","fieldId","marginTop","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_13___default","variant","color","react_router_dom__WEBPACK_IMPORTED_MODULE_12__","to","Component","HandleSignup"],"mappings":"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","file":"static/js/31.e953d5a0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport IntlTelInput from 'react-intl-tel-input';\r\nimport 'react-intl-tel-input/dist/main.css';\r\nimport \"../../Styles/auth.css\";\r\nimport ReactPasswordStrength from 'react-password-strength';\r\nimport { FormControl } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\nimport validator from \"validator\";\r\nimport { connect } from \"react-redux\";\r\nimport { HandleSignup } from \"../../Actions\";\r\nimport dotnetify from 'dotnetify';\r\n\r\n\r\n//\r\n// const lookup = callback => {\r\n//\r\n//     const request = new XMLHttpRequest();\r\n//\r\n//     request.addEventListener('load', () => {\r\n//         callback(JSON.parse(request.responseText).country_code);\r\n//     });\r\n//\r\n//     request.open('GET', 'https://api.ipdata.co/?api-key=test');\r\n//     request.send();\r\n// };\r\n\r\nclass Signup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.vm = dotnetify.react.connect('SignUp', this, { vmArg: { CountryISO2: \"nl\" } });\r\n\r\n\r\n        this.state = {\r\n            valid: \"\",\r\n            validation: true,\r\n            countryName: \"\",\r\n            flag: '',\r\n            countryCode:'',\r\n            country_code_ios2:\"\",\r\n            phoneValidate: false,\r\n            fields: {\r\n                firstname: \"\",\r\n                lastname: \"\",\r\n                email: \"\",\r\n                password: \"\",\r\n                phonenumber: \"\"\r\n            },\r\n            errors: {},\r\n            SubmitErrors:\"\",\r\n            SubmitSuccuss:false,\r\n            WhatsMyInfo: {\r\n                CountryCodeISO2: '',\r\n                CountryName: '',\r\n                CountryCodePhone: 0,\r\n                ExternalIPAddress: ''\r\n            }\r\n        };\r\n        this.myRef = React.createRef();\r\n\r\n    }\r\n\r\n    handleChange(event) {\r\n        let fields = this.state.fields;\r\n        fields[event.target.name] = event.target.value;\r\n        this.setState({ fields })\r\n    }\r\n\r\n    handleValidation(callback) {\r\n        let { fields } = this.state;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        // validate firstname\r\n        if (validator.isEmpty(fields.firstname)) {\r\n            formIsValid = false;\r\n            errors[\"firstname\"] = \"First name can't be empty.\";\r\n        } else if (!validator.isLength(fields.firstname, { min: 3, max: undefined })) {\r\n            formIsValid = false;\r\n            errors[\"firstname\"] = \"First name must be more than 3 character.\";\r\n        }\r\n\r\n        // validate lastname\r\n        if (validator.isEmpty(fields.lastname)) {\r\n            formIsValid = false;\r\n            errors[\"lastname\"] = \"Last name address can't be empty.\";\r\n        } else if (!validator.isLength(fields.lastname, { min: 3, max: undefined })) {\r\n            formIsValid = false;\r\n            errors[\"lastname\"] = \"Last name must be more than 3 character.\";\r\n        }\r\n\r\n        // validate mail\r\n        if (validator.isEmpty(fields.email)) {\r\n            formIsValid = false;\r\n            errors[\"email\"] = \"Email address can't be empty.\";\r\n        } else if (!validator.isEmail(fields.email)) {\r\n            formIsValid = false;\r\n            errors[\"email\"] = \"Email address is invalid.\";\r\n        }\r\n\r\n        // validate password\r\n        if (validator.isEmpty(fields.password)) {\r\n            formIsValid = false;\r\n            errors[\"password\"] = \"Password can't be empty.\";\r\n        } else if (!validator.isLength(fields.password, { min: 6, max: undefined })) {\r\n            formIsValid = false;\r\n            errors[\"password\"] = \"Email must be more than 6 character.\";\r\n        }\r\n\r\n        // validate Phone number\r\n        if (validator.isEmpty(fields.phonenumber)) {\r\n            formIsValid = false;\r\n            errors[\"phonenumber\"] = \"Phone number can't be empty.\";\r\n        } else if (!validator.isLength(fields.phonenumber, { min: 3, max: undefined })) {\r\n            formIsValid = false;\r\n            errors[\"phonenumber\"] = \"Phone number is invalid.\";\r\n        } else if (!validator.isNumeric(fields.phonenumber)) {\r\n            formIsValid = false;\r\n            errors[\"phonenumber\"] = \"Phone number only must contain number.\";\r\n        } else if (!this.state.phoneValidate) {\r\n            formIsValid = false;\r\n            errors[\"phonenumber\"] = \"Phone number is not compatible.\";\r\n        }\r\n\r\n        // set errors\r\n        this.setState({ errors }, () => {\r\n            return callback(formIsValid);\r\n        })\r\n    }\r\n    handlesubmit(event) {\r\n        event.preventDefault();\r\n       \r\n        this.handleValidation((valid) => {\r\n            if (valid) {\r\n                const { fields, country_code_ios2, WhatsMyInfo} = this.state;\r\n\r\n                // Set up function to dispatch state to the back-end.\r\n                this.vm.$dispatch({ \r\n                    Submit: {\r\n                        firstname: fields.firstname,\r\n                        lastname: fields.lastname,\r\n                        email: fields.email,\r\n                        phone: fields.phonenumber,\r\n                        password: fields.password,\r\n                        userCountryISO2: country_code_ios2 || WhatsMyInfo.CountryCodeISO2,\r\n                    }\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevState){\r\n        if (this.state.SubmitSuccuss !== prevState.SubmitSuccuss) {\r\n            if(this.state.SubmitSuccuss){\r\n                const { WhatsMyInfo} = this.state;\r\n                localStorage.setItem('phonenumber', this.state.fields.phonenumber);\r\n                localStorage.setItem('country', this.state.countryName|| WhatsMyInfo.CountryName);\r\n                localStorage.setItem('countryISO2', this.state.flag|| WhatsMyInfo.CountryCodeISO2);\r\n                localStorage.setItem('countryCode', this.state.countryCode || WhatsMyInfo.CountryCodePhone);\r\n                this.props.history.push('/signup-phone-verification')\r\n            }\r\n        }\r\n    }\r\n\r\n    handlePhone(status, value) {\r\n        let fields = this.state.fields;\r\n        fields[\"phonenumber\"] = value;\r\n        this.setState({\r\n            fields,\r\n            phoneValidate: status,\r\n        })\r\n    }\r\n\r\n    handler(status, value) {\r\n        if (status) {\r\n            this.setState({\r\n                valid: true,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                valid: false,\r\n            })\r\n        }\r\n    }\r\n\r\n    isValid() {\r\n        if (!this.state.valid) {\r\n            this.setState({\r\n                validation: false,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                validation: true,\r\n            })\r\n        }\r\n    }\r\n\r\n    selectcountry(status, value) {\r\n        this.myRef.current.state.value = \"\";\r\n        this.setState({\r\n            countryCode: this.myRef.current.selectedCountryData.dialCode,\r\n            countryName: this.myRef.current.selectedCountryData.name,\r\n            flag: this.myRef.current.selectedCountryData.iso2,\r\n            valid: false,\r\n            country_code_ios2:value.iso2,\r\n        })\r\n    }\r\n\r\n    _handleChangepasswordCallBack(event) {\r\n        let {fields} = this.state;\r\n        fields[\"password\"] = event.password;\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n       this.vm.$destroy();\r\n    }\r\n\r\n    render() {\r\n        const { firstname, lastname, email } = this.state.fields;\r\n\r\n        return (\r\n            <div className=\"col-xs-12 no-horizantal\">\r\n                <div className=\"col-xs-12 main-div\">\r\n                    <div className=\"form-signin-or-up-container\">\r\n                        <h1 className=\"text-center colored-header-box\">Create your account</h1>\r\n                        <form className=\"register-form\" onSubmit={this.handlesubmit.bind(this)}>\r\n                            <FormControl\r\n                                type=\"text\"\r\n                                value={firstname}\r\n                                className=\"sign-up-form\"\r\n                                placeholder=\"First Name\"\r\n                                onChange={this.handleChange.bind(this)}\r\n                                name=\"firstname\"\r\n                            />\r\n                            {this.state.errors.firstname ?\r\n                                <span className=\"input-errors\" >{this.state.errors.firstname}</span>\r\n                                :\r\n                                null\r\n                            }\r\n\r\n                            <FormControl\r\n                                type=\"text\"\r\n                                value={lastname}\r\n                                className=\"sign-up-form\"\r\n                                placeholder=\"Last Name\"\r\n                                onChange={this.handleChange.bind(this)}\r\n                                name=\"lastname\"\r\n                            />\r\n                            {this.state.errors.lastname ?\r\n                                <span className=\"input-errors\" >{this.state.errors.lastname}</span>\r\n                                :\r\n                                null\r\n                            }\r\n                            <FormControl\r\n                                type=\"text\"\r\n                                className=\"sign-up-form\"\r\n                                value={email}\r\n                                placeholder=\"Email address\"\r\n                                onChange={this.handleChange.bind(this)}\r\n                                name=\"email\"\r\n                            />\r\n                            {this.state.errors.email ?\r\n                                <span className=\"input-errors\" >{this.state.errors.email}</span>\r\n                                :\r\n                                null\r\n                            }\r\n\r\n                            <ReactPasswordStrength\r\n                                style={{\r\n                                    marginBottom: '8px',\r\n                                    borderRadius: '4px',\r\n                                }}\r\n                                minLength={0}\r\n                                scoreWords={['Weak', 'Good', 'Strong', 'Secure']}\r\n                                changeCallback={this._handleChangepasswordCallBack.bind(this)}\r\n                                inputProps={{\r\n                                    name: 'password',\r\n                                    autoComplete: 'off',\r\n                                    className: 'form-control sign-up-form',\r\n                                    placeholder: 'Password',\r\n                                }}\r\n                            />\r\n\r\n                            \r\n                            {this.state.errors.password ?\r\n                                <span className=\"input-errors\" >{this.state.errors.password}</span>\r\n                                :\r\n                                null\r\n                            }\r\n                            {this.state.WhatsMyInfo.CountryCodeISO2\r\n                                ?<IntlTelInput\r\n                                    ref={this.myRef}\r\n                                    onPhoneNumberBlur={this.isValid.bind(this)}\r\n                                    preferredCountries={[this.state.WhatsMyInfo.CountryCodeISO2.toLowerCase()]}\r\n                                    // defaultCountry=\"auto\"\r\n                                    // geoIpLookup={lookup}\r\n                                    onPhoneNumberChange={this.handlePhone.bind(this)}\r\n                                    onSelectFlag={this.selectcountry.bind(this)}\r\n                                    separateDialCode={true}\r\n                                    fieldName=\"phonenumber\"\r\n                                    fieldId=\"phonenumber\"\r\n                                />\r\n                                :null\r\n                            }\r\n\r\n\r\n                            {this.state.errors.phonenumber ?\r\n                                <span className=\"input-errors\" >{this.state.errors.phonenumber}</span>\r\n                                :\r\n                                null\r\n                            }\r\n\r\n                            {this.state.SubmitErrors ?\r\n                                <span className=\"input-errors text-center\" style={{marginTop:\"15px\",marginBottom:\"-10px\"}}>{this.state.SubmitErrors}</span>\r\n                                :\r\n                                null\r\n                            }\r\n                            \r\n\r\n                            <Button variant=\"contained\" color=\"primary\" className=\"submit-btn\" type=\"submit\" >\r\n                                Create account\r\n                            </Button>\r\n                        </form>\r\n                        <div className=\"col-xs-12 no-horizantal go-to-login text-center\">\r\n                            <span>Already have an account? </span>\r\n                            <span><Link to=\"/login\">Log in</Link></span>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, { HandleSignup })(Signup);\r\n\r\n"],"sourceRoot":""}