{"version":3,"sources":["Images/bank-logo/ing-bank.png","Components/BankAccount/Banks/Ing/Ing.js"],"names":["module","exports","__webpack_require__","p","Ing","props","_this","Object","D_Projects_ace_accounting_cordova_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_Projects_ace_accounting_cordova_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_Projects_ace_accounting_cordova_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","loading","acception","loginType","username","password","warning","AccountSubmitError","AccountErrorMessage","AccountSubmitSuccess","fields","errors","vm","dotnetify","react","connect","D_Projects_ace_accounting_cordova_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","prevProps","prevState","setState","event","target","name","value","validator","isEmpty","callback","formIsValid","_this2","preventDefault","handleValidation","valid","$dispatch","SubmitAccountInformation","UserName","Password","IsPersonal","$destroy","_this$state","console","log","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","action","onSubmit","handleSubmit","bind","type","id","src","bankimage","alt","_material_ui_core_CircularProgress_CircularProgress__WEBPACK_IMPORTED_MODULE_16___default","disableShrink","size","thickness","join","onClick","handleChangeLoginType","aria-hidden","handleWarning","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_13___default","label","margin","onChange","handleChangeInput","inputProps","autoComplete","htmlFor","_material_ui_core_FormControlLabel_FormControlLabel__WEBPACK_IMPORTED_MODULE_10___default","control","_material_ui_core_Checkbox_Checkbox__WEBPACK_IMPORTED_MODULE_11___default","color","checked","handleChangeAcception","acceptterms","_material_ui_core_Button_Button__WEBPACK_IMPORTED_MODULE_12___default","variant","Component"],"mappings":"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","file":"static/js/22.19bd66ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ing-bank.c9f3aecc.png\";","import React,{Component} from \"react\";\r\nimport \"../../../../Styles/Bank/abn-bank.css\";\r\nimport \"../../../../Styles/Bank/ing-bank.css\";\r\nimport bankimage from \"../../../../Images/bank-logo/ing-bank.png\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox/Checkbox\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport validator from \"validator\";\r\nimport dotnetify from \"dotnetify\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\r\n\r\nclass Ing extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            loading:false,\r\n            acception:true,\r\n            loginType:true, //personal\r\n            username:'',\r\n            password:'',\r\n            warning:true,//visible warning\r\n            AccountSubmitError:false,\r\n            AccountErrorMessage:false,\r\n            AccountSubmitSuccess:false,\r\n            fields: {\r\n                username:'',\r\n                password:'',\r\n            },\r\n            errors: {},\r\n        });\r\n\r\n        this.vm = dotnetify.react.connect('Ing', this);\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.AccountSubmitSuccess !== prevState.AccountSubmitSuccess) {\r\n            if(this.state.AccountSubmitSuccess){\r\n                // Todo:handle true information\r\n                this.setState({\r\n                    loading:false,\r\n                })\r\n            }\r\n        }\r\n\r\n        if (this.state.AccountSubmitError !== prevState.AccountSubmitError) {\r\n            if(this.state.AccountSubmitError){\r\n                // Todo:handle invalid information\r\n                this.setState({\r\n                    loading:false,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChangeInput(event){\r\n        let {fields} = this.state;\r\n        let errors = {};\r\n        fields[event.target.name]=event.target.value;\r\n        if(validator.isEmpty(fields[event.target.name])){\r\n            if(event.target.name===\"username\"){\r\n                errors[event.target.name] = \"Please enter your user name.\";\r\n            }else if(event.target.name===\"password\"){\r\n                errors[event.target.name] = \"Please enter your password.\";\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            fields:fields,\r\n            errors:errors\r\n        })\r\n\r\n    }\r\n\r\n\r\n    handleValidation(callback){\r\n        let { fields } = this.state;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n\r\n        if(validator.isEmpty(fields.username)) {\r\n            formIsValid = false;\r\n            errors[\"username\"] = \"Please enter your user name.\";\r\n        }\r\n\r\n        if(validator.isEmpty(fields.password)) {\r\n            formIsValid = false;\r\n            errors[\"password\"] = \"Please enter your password.\";\r\n        }\r\n\r\n        if(!this.state.acception){\r\n            formIsValid = false;\r\n            errors[\"acceptterms\"] = \"this must be accepted.\";\r\n        }\r\n\r\n        this.setState({ errors }, () => {\r\n            return callback(formIsValid);\r\n        })\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        this.setState({\r\n            loading:true,\r\n        });\r\n        this.handleValidation((valid) => {\r\n            if (valid) {\r\n                //web socket to get data from backend\r\n                this.vm.$dispatch({\r\n                    SubmitAccountInformation: {\r\n                        UserName: this.state.fields.username,\r\n                        Password:this.state.fields.password,\r\n                        IsPersonal:this.state.loginType,\r\n                    }\r\n                });\r\n\r\n            }else{\r\n                this.setState({\r\n                    loading:false,\r\n                });\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n//handle acception of terms and conditions\r\n    handleChangeAcception(){\r\n        this.setState({\r\n            acception:!this.state.acception,\r\n\r\n        })\r\n    }\r\n\r\n// handle login type\r\n    handleChangeLoginType(){\r\n        this.setState({\r\n            loginType:!this.state.loginType,\r\n            warning:true,\r\n        })\r\n    }\r\n\r\n    handleWarning(){\r\n        this.setState({\r\n            warning:false,\r\n        })\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        this.vm.$destroy();\r\n    }\r\n\r\n\r\n    render(){\r\n        const {fields, errors, warning, loading}=this.state;\r\n        console.log(this.state.AccountSubmitError, this.state.AccountSubmitSuccess);\r\n\r\n        return(\r\n            <div className=\"col-xs-12 no-horizantal\">\r\n                <div className=\"col-xs-12 abn-body\">\r\n                    <div className=\"container\">\r\n                        <div className=\"main-body-abn col-xs-10 col-xs-offset-1\">\r\n                            <form action=\"\" onSubmit={this.handleSubmit.bind(this)}>\r\n                            <input type=\"hidden\" name=\"login_type\" value={this.state.loginType}/>\r\n                            <div id=\"header\" className=\"text-center\">\r\n                                    <div className=\"abn-header text-center\">\r\n                                        <img src={bankimage} className=\"img-responsive\" alt=\"ing Bank\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-xs-12 abn-body-container\">\r\n                                    <div className=\"col-xs-12 form-container text-center\">\r\n                                        {loading ?\r\n                                            (\r\n                                                <div className=\"spinner-container\">\r\n                                                    <CircularProgress disableShrink  size={24} thickness={4} className=\"loading-spinner\" />\r\n                                                </div>\r\n                                            )\r\n                                            :\r\n                                            null\r\n                                        }\r\n\r\n                                        <span className=\"login-ing-container\">\r\n\r\n                                            <div className=\"col-xs-12 change-login-type\">\r\n                                                <span className={[\"\" , this.state.loginType?\"isactive\":\"\"].join(\" \")} onClick={this.handleChangeLoginType.bind(this)}>Personal</span>\r\n                                                <span className={[\"\" , this.state.loginType?\"\":\"isactive\"].join(\" \")} onClick={this.handleChangeLoginType.bind(this)}>Business</span>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-xs-12 ing-sub-body\">\r\n                                                {warning ?\r\n                                                    <div className=\"col-xs-12 warning no-horizantal\">\r\n                                                        <div className=\"alert\">\r\n                                                            <i className=\"fa fa-info-circle left\" aria-hidden=\"true\"></i>\r\n                                                            <span>\r\n                                                                <h2 className=\"title\">Want to log in as a {this.state.loginType? \"business\":\"private\"} user?</h2>\r\n                                                                <span className=\"text\">Select {this.state.loginType? \"‘Business’\":\"‘Personal’\"} to log in to Mijn ING. </span>\r\n                                                            </span>\r\n                                                            <i className=\"fa fa-times right\" onClick={this.handleWarning.bind(this)} aria-hidden=\"true\"></i>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    :\r\n                                                    null\r\n                                                }\r\n                                                <h1 className=\"up-title text-left\">Log in to Mijn ING</h1>\r\n                                                <div className=\"col-xs-12 no-horizantal\">\r\n                                                    <TextField\r\n                                                        id=\"standard-username-input\"\r\n                                                        label=\"User name\"\r\n                                                        className={[\"input-ing\",errors.username?\"haserror\":\"\"].join(\" \")}\r\n                                                        type=\"text\"\r\n                                                        margin=\"normal\"\r\n                                                        name='username'\r\n                                                        value={fields.username}\r\n                                                        onChange={this.handleChangeInput.bind(this)}\r\n                                                        inputProps={{\r\n                                                            autoComplete:\"section-email\",\r\n                                                        }}\r\n                                                    />\r\n                                                    {errors.username ?\r\n                                                        <span className=\"input-errors-ing\"><i className=\"fa fa-times-circle\"></i> {errors.username}</span>\r\n                                                        :\r\n                                                        null\r\n                                                    }\r\n                                                </div>\r\n\r\n                                                <div className=\"col-xs-12 no-horizantal\">\r\n                                                    <TextField\r\n                                                        id=\"standard-password-input\"\r\n                                                        label=\"Password\"\r\n                                                        className={[\"input-ing\",errors.password?\"haserror\":\"\"].join(\" \")}\r\n                                                        type=\"password\"\r\n                                                        margin=\"normal\"\r\n                                                        name='password'\r\n                                                        value={fields.password}\r\n                                                        onChange={this.handleChangeInput.bind(this)}\r\n                                                        inputProps={{\r\n                                                            autoComplete:\"new-password\",\r\n                                                        }}\r\n                                                    />\r\n                                                    {errors.password ?\r\n                                                        <span className=\"input-errors-ing\"><i className=\"fa fa-times-circle\"></i> {errors.password}</span>\r\n                                                        :\r\n                                                        null\r\n                                                    }\r\n                                                </div>\r\n\r\n                                                <div className=\"col-xs-12 no-horizantal text-left\">\r\n                                                    <input type=\"checkbox\" id=\"remember-me\"/>\r\n                                                    <label htmlFor=\"remember-me\" className=\"pointer\">\r\n                                                        <span className=\"handle-checkbox\"></span>\r\n                                                        Remember my user name.\r\n                                                    </label>\r\n                                                </div>\r\n\r\n\r\n                                            </div>\r\n\r\n                                        </span>\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"col-xs-12 getfeed-btn no-horizantal\">\r\n                                        <div className=\"col-xs-12 text-center\">\r\n                                            <FormControlLabel\r\n                                                control={\r\n                                                    <Checkbox\r\n                                                        color=\"default\"\r\n                                                        checked={this.state.acception}\r\n                                                        value=\"remember-me\"\r\n                                                        onChange={this.handleChangeAcception.bind(this)}\r\n                                                        className=\"remember-me\"\r\n                                                        name=\"acceptterms\"\r\n                                                    />\r\n                                                }\r\n                                                label=\"Accept aceaccounting terms and conditions\"\r\n                                                className=\"label-remember-me terms-condition\"\r\n                                            />\r\n                                            <div className=\"clearfix\"/>\r\n                                            {this.state.errors.acceptterms ?\r\n                                                <span className=\"input-errors\" >{this.state.errors.acceptterms}</span>\r\n                                                :\r\n                                                null\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"col-xs-12 text-center\">\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                type=\"submit\"\r\n                                                className=\"bank-submit\"\r\n                                            >\r\n                                                Accept and Login\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Ing;\r\n"],"sourceRoot":""}