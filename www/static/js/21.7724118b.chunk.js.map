{"version":3,"sources":["Images/account/bankAccount.png","Components/ShareComponent/LineChart.js","Components/BankAccount/AccountSection/Transaction.js","Components/BankAccount/AccountSection/AccountSection.js","Components/BankAccount/AccountSection/WithOutTransaction.js","Components/BankAccount/Account.js"],"names":["module","exports","__webpack_require__","p","LineChart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","chartData","labels","datasets","data","backgroundColor","borderColor","react_default","a","createElement","className","react_chartjs_2_es","height","options","maintainAspectRatio","legend","display","scales","yAxes","Component","Transaction","ShareComponent_LineChart","AccountSection","transactionData","item","BankLogoUrl","src","alt","BankName","aria-hidden","Country","AccountNumber","IBAN","dist_default","format","LastUpdate","AccountSection_Transaction","XeroBalance","StatementBalance","XeroBalanceStatement","CurrencyCode","CurrencySymbol","concat","Link","to","CountryIso2","toLowerCase","BankSlug","Button_default","variant","Account","open","vertical","horizontal","Accounts","ChangedAccounts","OrganisationShortCode","organisationShortCode","companyDetails","vm","dotnetify","react","connect","vmArg","UserId","userInfo","userId","location","isNew","setState","prevProps","prevState","$dispatch","ChangeOrganisationBankAccount","JSON","stringify","history","push","$destroy","onClick","changeRoute","bind","length","map","index","BankAccount_AccountSection_AccountSection","key","WithoutAccount","color","Loading","Snackbar_default","anchorOrigin","onClose","handleClose","autoHideDuration","ContentProps","aria-describedby","message","id","withNamespaces","User","CompanyDetails"],"mappings":"oGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+TCiDzBC,cA7CX,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAO,CACRC,UAAU,CACNC,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MACtDC,SAAU,CAAC,CACPC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAClDC,gBAAiB,wBACjBC,YAAa,4BARXb,wEAcd,OACIc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIP,KAAMR,KAAKI,MAAMC,UACjBW,OAAQ,IACRC,QAAS,CACLC,qBAAqB,EACrBC,OAAQ,CACJC,SAAS,GAEbC,OAAQ,CAOJC,MAAO,CAAC,CACJF,SAAS,gBAjCjBG,aCgBTC,mLATP,OACIb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAACY,EAAD,cARUF,aCkIXG,GClIkBH,+BDK7B,SAAAG,EAAY9B,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0B,IACd7B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4B,GAAAvB,KAAAH,KAAMJ,KACDQ,MAAO,CACRuB,gBAAgB,IAHN9B,wEAMV,IACG+B,EAAM5B,KAAKJ,MAAXgC,KAEP,OACIjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBACXc,EAAKC,YACAlB,EAAAC,EAAAC,cAAA,OAAKiB,IAAKF,EAAKC,YAAaf,UAAU,iBAAiBiB,IAAKH,EAAKI,WACjErB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAmBmB,cAAY,UAItDtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,SAAIe,EAAKI,UACTrB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAoBc,EAAKM,WAG9CvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACfH,EAAAC,EAAAC,cAAA,+BAGIF,EAAAC,EAAAC,cAAA,YACCe,EAAKO,gBAGTP,EAAKQ,KAEFzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACfH,EAAAC,EAAAC,cAAA,qBAGIF,EAAAC,EAAAC,cAAA,YACCe,EAAKQ,OAGT,KAGLzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,4BAGIF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,CAAQ0B,OAAO,cACVV,EAAKW,eAOlB5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BAELH,EAAAC,EAAAC,cAAC2B,EAAD,QAMd7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACVc,EAAKa,cAAcb,EAAKc,kBAAoBd,EAAKc,mBAAmBd,EAAKe,sBAAoD,MAA5Bf,EAAKe,qBACjG,KACAf,EAAKa,cAAcb,EAAKc,iBAElB/B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,uCAGCe,EAAKa,YAAcb,EAAKa,YAAc,KAJ3C,MAIoDb,EAAKgB,aAJzD,IAIwEhB,EAAKiB,eAAL,IAAAC,OAA0BlB,EAAKiB,eAA/B,KAAmD,MAGvHlC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,6BAGCe,EAAKa,YAAcb,EAAKa,YAAc,KAJ3C,MAIoDb,EAAKgB,aAJzD,IAIwEhB,EAAKiB,eAAL,IAAAC,OAA0BlB,EAAKiB,eAA/B,KAAmD,MAE3HlC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,uCAGCe,EAAKa,YAAcb,EAAKa,YAAc,KAJ3C,MAIoDb,EAAKgB,aAJzD,IAIwEhB,EAAKiB,eAAL,IAAAC,OAA0BlB,EAAKiB,eAA/B,KAAmD,OAO3IlC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,gCAGCe,EAAKc,iBAAmBd,EAAKc,iBAAmB,KAJrD,MAI8Dd,EAAKgB,aAJnE,IAIkFhB,EAAKiB,eAAL,IAAAC,OAA0BlB,EAAKiB,eAA/B,KAAmD,KAEhIjB,EAAKa,cAAgBb,EAAKc,kBAAoBd,EAAKc,mBAAqBd,EAAKe,sBAAqD,MAA7Bf,EAAKe,qBACrGhC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBACdH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BAEf,OAKdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAMC,GAAI,YAAapB,EAAKqB,YAAYC,cAAe,IAAKtB,EAAKuB,SAASD,eACtEvC,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,CAAQyC,QAAQ,aAAhB,mBAA4C1C,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAAsBmB,cAAY,qBArH1FV,uBEMvB+B,cACF,SAAAA,EAAY1D,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsD,IACdzD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwD,GAAAnD,KAAAH,KAAMJ,KACDQ,MAAM,CACPmD,MAAK,EACLC,SAAU,SACVC,WAAY,QACZC,SAAS,GACTC,gBAAgB,GAChBC,sBAAsB,IARZ/D,kMAsBVgE,EAAsB7D,KAAKJ,MAAMkE,eAAeD,sBAAwB7D,KAAKJ,MAAMkE,eAAeD,sBAAuB,KAC7H7D,KAAK+D,GAAKC,IAAUC,MAAMC,QAAQ,cAAelE,KAAM,CAAEmE,MAAO,CAAEP,sBAAuBC,EAAuBO,OAAOpE,KAAKJ,MAAMyE,SAASC,gQAIxItE,KAAKJ,MAAM2E,SAASnE,OAChBJ,KAAKJ,MAAM2E,SAASnE,MAAMoE,OACzBxE,KAAKyE,SAAS,CACVlB,MAAK,iJAOFmB,EAAWC,GACrB3E,KAAKJ,MAAMkE,eAAeD,wBAA0Ba,EAAUZ,eAAeD,uBAC9E7D,KAAK+D,GAAGa,UAAU,CACdC,8BAA+B,CAC3BjB,sBAAuB5D,KAAKJ,MAAMkE,eAAeD,sBACjDO,OAAQpE,KAAKJ,MAAMyE,SAASC,UAKpCQ,KAAKC,UAAU/E,KAAKI,MAAMuD,mBAAoBmB,KAAKC,UAAWJ,EAAUhB,kBACxE3D,KAAKyE,SAAS,CACVf,SAAU1D,KAAKI,MAAMuD,wDAM7B3D,KAAKyE,SAAS,CAAElB,MAAM,0CAItBvD,KAAKJ,MAAMoF,QAAQC,KAAK,wEAIxBjF,KAAK+D,GAAGmB,4CAGJ,IACGxB,EAAU1D,KAAKI,MAAfsD,SACP,OACI/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACPH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6DACXH,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,CAAQyC,QAAQ,YAAYvC,UAAU,qCAAqCqE,QAASnF,KAAKoF,YAAYC,KAAKrF,OACtGW,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAoBmB,cAAY,SADjD,mBAKAtB,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAMC,GAAG,kBACLrC,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,CAAQyC,QAAQ,YAAYvC,UAAU,sCAClCH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAoBmB,cAAY,SADjD,oBAMRtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6CAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CAEV4C,EACKA,EAAS4B,OAAO,EAEd5B,EAAS6B,IAAI,SAAC3D,EAAM4D,GAChB,OAAO7E,EAAAC,EAAAC,cAAC4E,EAAD,CAAgBC,IAAKF,EAAO5D,KAAMA,MAG7CjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKiB,IAAK6D,IAAiB5D,IAAI,kBAAkBjB,UAAU,mCAE3DH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,CAAQyC,QAAQ,YAAYuC,MAAM,UAAU9E,UAAU,cAAcqE,QAASnF,KAAKoF,YAAYC,KAAKrF,OAAnG,iBAKVW,EAAAC,EAAAC,cAACgF,EAAA,EAAD,OAIdlF,EAAAC,EAAAC,cAACiF,EAAAlF,EAAD,CACImF,aAAc,CAACvC,SAASxD,KAAKI,MAAMoD,SAAWC,WAAWzD,KAAKI,MAAMqD,YACpEF,KAAMvD,KAAKI,MAAMmD,KACjByC,QAAShG,KAAKiG,YAAYZ,KAAKrF,MAC/BkG,iBAAkB,IAClBpF,UAAU,mBACVuC,QAAQ,UACR8C,aAAc,CACVC,mBAAoB,cAExBC,QACI1F,EAAAC,EAAAC,cAAA,QAAMyF,GAAG,cAAT,+BAEI3F,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAoBqE,QAASnF,KAAKiG,YAAYZ,KAAKrF,MAAOiC,cAAY,qBA1H7FV,aA4IPgF,sBAAe,cAAfA,CAA8BrC,YAPrB,SAAA9D,GACpB,MAAO,CACHiE,SAAUjE,EAAMoG,KAChB1C,eAAgB1D,EAAMqG,iBAIwC,GAAzBvC,CAA6BZ","file":"static/js/21.7724118b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bankAccount.b4b1988a.png\";","import React, {Component} from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nclass LineChart extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            chartData:{\r\n                labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"],\r\n                datasets: [{\r\n                    data: [12, 19, 19, 19, 19, 3, 45, 4,15,1,11,1,1,1,1],\r\n                    backgroundColor: 'rgb(255, 99, 132,0.5)',\r\n                    borderColor: 'rgb(255, 99, 132,0.9)',\r\n                }]\r\n            }\r\n        });\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"chart\">\r\n                <Line\r\n                    data={this.state.chartData}\r\n                    height={100}\r\n                    options={{\r\n                        maintainAspectRatio: false,\r\n                        legend: {\r\n                            display: false,\r\n                        },\r\n                        scales: {\r\n                            // xAxes: [{\r\n                            //     // type: 'time',\r\n                            //     time: {\r\n                            //         unit: 'month'\r\n                            //     }\r\n                            // }],\r\n                            yAxes: [{\r\n                                display: false\r\n                            }],\r\n                        },\r\n\r\n\r\n                    }}\r\n\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LineChart;","import React,{Component} from 'react';\r\nimport LineChart from \"../../ShareComponent/LineChart\";\r\n\r\n\r\nclass Transaction extends Component{\r\n    // constructor(props){\r\n    //     super(props);\r\n    //\r\n    // }\r\n    render(){\r\n        return(\r\n            <div className=\"transaction-data\">\r\n                <LineChart />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Transaction;","import React,{Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link} from \"react-router-dom\";\r\nimport Moment from 'react-moment';\r\nimport Transaction from './Transaction';\r\nimport WithOutTransaction from './WithOutTransaction';\r\nimport \"../../../Styles/AccountUpdate.css\";\r\n\r\nclass AccountSection extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=({\r\n            transactionData:[],\r\n        });\r\n    }\r\n    render(){\r\n        const {item}=this.props;\r\n        // const {transactionData}=this.state;\r\n        return(\r\n            <div className=\"account\">\r\n                <div className=\"title\">\r\n                    <span className=\"image-span-bank\">\r\n                        {item.BankLogoUrl\r\n                            ? <img src={item.BankLogoUrl} className='img-responsive' alt={item.BankName}/>\r\n                            : <i className=\"fa fa-university\" aria-hidden=\"true\"></i>\r\n                        }\r\n\r\n                    </span>\r\n                    <div className=\"section-title\">\r\n                        <p>{item.BankName}</p>\r\n                        <p className=\"section-subtitle\">{item.Country}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"account-content\">\r\n                    <div className=\"col-xs-3\">\r\n                        <div className=\"iban\">\r\n                        <span>\r\n                            Account Number:\r\n                        </span>\r\n                            <span>\r\n                            {item.AccountNumber}\r\n                        </span>\r\n                        </div>\r\n                        {item.IBAN\r\n                            ?\r\n                            <div className=\"iban\">\r\n                            <span>\r\n                                IBAN:\r\n                            </span>\r\n                                <span>\r\n                                {item.IBAN}\r\n                            </span>\r\n                            </div>\r\n                            :null\r\n                        }\r\n\r\n                        <div className=\"last-update\">\r\n                        <span>\r\n                            Last Update:\r\n                        </span>\r\n                            <span>\r\n                            <Moment format=\"YYYY/MM/DD\">\r\n                                {item.LastUpdate}\r\n                            </Moment>\r\n                        </span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/*transaction chart section*/}\r\n                    <div className=\"col-xs-9 transaction-chart\">\r\n                        {true\r\n                            ? <Transaction/>\r\n                            : <WithOutTransaction/>\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"existance\">\r\n                    <div className=\"amount\">\r\n                        {item.XeroBalance===item.StatementBalance && item.StatementBalance===item.XeroBalanceStatement && item.XeroBalanceStatement !=null\r\n                            ? null\r\n                            : item.XeroBalance===item.StatementBalance\r\n                                ? (\r\n                                    <div>\r\n                                        <span>\r\n                                            Bank Statement Balance:\r\n                                        </span>\r\n                                        {item.XeroBalance ? item.XeroBalance : '--'} - {item.CurrencyCode} {item.CurrencySymbol ? `(${item.CurrencySymbol})` : null}\r\n                                    </div>\r\n                                )\r\n                                : (     <div>\r\n                                        <div>\r\n                                            <span>\r\n                                                Xero Balance:\r\n                                            </span>\r\n                                            {item.XeroBalance ? item.XeroBalance : '--'} - {item.CurrencyCode} {item.CurrencySymbol ? `(${item.CurrencySymbol})` : null}\r\n                                        </div>\r\n                                        <div>\r\n                                            <span>\r\n                                                Xero Statement Balance:\r\n                                            </span>\r\n                                            {item.XeroBalance ? item.XeroBalance : '--'} - {item.CurrencyCode} {item.CurrencySymbol ? `(${item.CurrencySymbol})` : null}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                )\r\n\r\n                        }\r\n                        <div>\r\n                            <span>\r\n                                Account Balance:\r\n                            </span>\r\n                            {item.StatementBalance ? item.StatementBalance : '--'} - {item.CurrencyCode} {item.CurrencySymbol ? `(${item.CurrencySymbol})` : null}\r\n\r\n                            {item.XeroBalance === item.StatementBalance && item.StatementBalance === item.XeroBalanceStatement && item.XeroBalanceStatement != null\r\n                                ? <span className=\"balance-account\">\r\n                                    <i className=\"fa fa-check-circle-o\"></i>\r\n                                  </span>\r\n                                : null\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"refresh\">\r\n                        <Link to={\"/banking/\"+ item.CountryIso2.toLowerCase() +\"/\"+ item.BankSlug.toLowerCase() }>\r\n                            <Button variant=\"contained\">Update Statement<i className=\"fa fa-chevron-right\" aria-hidden=\"true\"></i></Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AccountSection;","import React,{Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass WithOutTransaction extends Component{\r\n    // constructor(props){\r\n    //     super(props);\r\n    //\r\n    // }\r\n    render(){\r\n        return(\r\n           <div className=\"transaction-data without-Transaction\">\r\n               <p>No transactions imported</p>\r\n               <div className=\"clearfix\"/>\r\n               <Link to=\"/uhu/kjhh\">import bank statement</Link>\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WithOutTransaction;","import React,{Component} from \"react\";\r\nimport \"../../Styles/account.css\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport {Link} from \"react-router-dom\";\r\n// Todo: Uncomment Trans for language change\r\nimport { withNamespaces /*, Trans */ } from 'react-i18next';\r\nimport dotnetify from \"dotnetify\";\r\nimport WithoutAccount from \"./../../Images/account/bankAccount.png\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport AccountSection from \"./AccountSection/AccountSection\";\r\nimport Loading from \"../../Loading\";\r\n\r\n\r\nclass Account extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            open:false,\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n            Accounts:[],\r\n            ChangedAccounts:[],\r\n            OrganisationShortCode:'',\r\n        };\r\n\r\n    }\r\n\r\n    async componentWillMount() {\r\n        // let firstOrg;\r\n        // if(this.props.companyDetails.length>0){\r\n        //     // if company data set, get first org data\r\n        //     if(await this.props.companyDetails.organisation.length>0){\r\n        //         firstOrg = await this.props.companyDetails.organisation[0].XeroOrgs[0].ShortCode;\r\n        //     }\r\n        // }\r\n\r\n        var organisationShortCode=this.props.companyDetails.organisationShortCode ? this.props.companyDetails.organisationShortCode: null;\r\n        this.vm = dotnetify.react.connect('BankAccount', this, { vmArg: { OrganisationShortCode: organisationShortCode, UserId:this.props.userInfo.userId }});\r\n    }\r\n\r\n    async componentDidMount(){\r\n        if(this.props.location.state){\r\n            if(this.props.location.state.isNew){\r\n                this.setState({\r\n                    open:true,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n         if (this.props.companyDetails.organisationShortCode !== prevProps.companyDetails.organisationShortCode) {\r\n            this.vm.$dispatch({\r\n                ChangeOrganisationBankAccount: {\r\n                    OrganisationShortCode: this.props.companyDetails.organisationShortCode,\r\n                    UserId: this.props.userInfo.userId,\r\n                }\r\n            });\r\n        }\r\n\r\n        if (JSON.stringify(this.state.ChangedAccounts) !==JSON.stringify( prevState.ChangedAccounts)) {\r\n            this.setState({\r\n                Accounts :this.state.ChangedAccounts,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleClose(){\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    changeRoute(){\r\n        this.props.history.push('/banking/account/find')\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.vm.$destroy();\r\n    }\r\n\r\n    render(){\r\n        const {Accounts}=this.state;\r\n        return(\r\n            <div className=\"col-xs-12 bank-account-page\" >\r\n                <div className=\"container\">\r\n                        <div className=\" no-horizantal bank-account-header dashboard-pages-header\">\r\n                            <Button variant=\"contained\" className=\"new-invoice btn-invoice header-btn\" onClick={this.changeRoute.bind(this)}>\r\n                                <i className=\"fa fa-plus-square\" aria-hidden=\"true\"></i>\r\n                                Add Bank Acount\r\n                            </Button>\r\n\r\n                            <Link to=\"/bank/transfer\">\r\n                                <Button variant=\"contained\" className=\"new-invoice btn-invoice header-btn\" >\r\n                                    <i className=\"fa fa-plus-square\" aria-hidden=\"true\"></i>\r\n                                    Transfer Money\r\n                                </Button>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"col-xs-12 invoice-type-select border-top\"></div>\r\n\r\n                        <div className=\"col-xs-12 no-horizantal account-container \">\r\n\r\n                            {Accounts\r\n                                ? Accounts.length>0\r\n                                    ?\r\n                                    Accounts.map((item, index)=>{\r\n                                        return <AccountSection key={index} item={item}/>\r\n                                    })\r\n                                    :\r\n                                    <div className=\"col-xs-12\">\r\n                                        <img src={WithoutAccount}  alt=\"without-account\" className=\"img-responsive without-account\"/>\r\n\r\n                                        <div className=\"col-xs-12 text-center\">\r\n                                            <Button variant=\"contained\" color=\"primary\" className=\"add-account\" onClick={this.changeRoute.bind(this)}>\r\n                                                Add Account\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                : <Loading/>\r\n                            }\r\n\r\n                        </div>\r\n                    <Snackbar\r\n                        anchorOrigin={{vertical:this.state.vertical , horizontal:this.state.horizontal}}\r\n                        open={this.state.open}\r\n                        onClose={this.handleClose.bind(this)}\r\n                        autoHideDuration={6000}\r\n                        className=\"snackbar-success\"\r\n                        variant=\"success\"\r\n                        ContentProps={{\r\n                            'aria-describedby': 'message-id',\r\n                        }}\r\n                        message={\r\n                            <span id=\"message-id\">\r\n                                your account has been added.\r\n                                <i className=\"fa fa-times right\" onClick={this.handleClose.bind(this)} aria-hidden=\"true\"></i>\r\n                            </span>\r\n                        }\r\n\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst MapStateToProps = state => {\r\n    return {\r\n        userInfo: state.User,\r\n        companyDetails: state.CompanyDetails,\r\n    }\r\n};\r\n\r\nexport default withNamespaces('translation')(connect(MapStateToProps, {})(Account));"],"sourceRoot":""}